generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://admin:Koushin1022@database-1.cjo806iq4azh.ap-northeast-1.rds.amazonaws.com:3306/database-1"
}

model User {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  token_id        Int?        @unique
  created_at      DateTime    @default(now())
  password        String
  is_admin        Boolean     @default(false)
  access_logs     AccessLog[]
  chat_rooms      ChatRoom[]
  tokens_assigned Token[]     @relation("AssignedTokens")
  token           Token?      @relation("UserToken", fields: [token_id], references: [id])
}

model Token {
  id            Int      @id @default(autoincrement())
  status        String   @db.VarChar(50)
  created_at    DateTime @default(now())
  assigned_to   Int?
  token_value   String   @unique
  assigned_user User?    @relation("AssignedTokens", fields: [assigned_to], references: [id])
  user_token    User?    @relation("UserToken")

  @@index([assigned_to], map: "Token_assigned_to_fkey")
}

model AccessLog {
  id         Int      @id @default(autoincrement())
  user_id    Int
  event      String   @db.VarChar(100)
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])

  @@index([user_id], map: "AccessLog_user_id_fkey")
}

model ChatRoom {
  id         Int       @id @default(autoincrement())
  user_id    Int
  created_at DateTime  @default(now())
  user       User      @relation(fields: [user_id], references: [id])
  messages   Message[]

  @@index([user_id], map: "ChatRoom_user_id_fkey")
}

model Message {
  id           Int      @id @default(autoincrement())
  chat_room_id Int
  sender       String   @db.VarChar(50)
  body         String   @db.Text
  created_at   DateTime @default(now())
  chat_room    ChatRoom @relation(fields: [chat_room_id], references: [id])

  @@index([chat_room_id], map: "Message_chat_room_id_fkey")
}
